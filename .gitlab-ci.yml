default:
  image: python:3.9-slim
  cache:
    paths:
      - .cache/pip

variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"

black:
  stage: test
  needs: []
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off black
  script:
    - black --check --diff --color .

flake8:
  stage: test
  needs: []
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off flake8
  script:
    - flake8 --count .

pycodestyle:
  stage: test
  needs: []
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off pycodestyle
  script:
    - pycodestyle -v --show-source .

mypy:
  stage: test
  allow_failure: true
  needs: []
  before_script:
    - pip install --upgrade pip
    - pip install --progress-bar=off lxml mypy
  script:
    - >
      mypy --ignore-missing-imports --pretty --show-error-context
      --junit-xml mypy.junit.xml
      --cobertura-xml-report .
      --lineprecision-report .
      ./
    # TODO: maybe enable the --strict flag later
  artifacts:
    paths:
      - mypy.junit.xml
      - cobertura.xml
      - lineprecision.txt
    reports:
      junit: mypy.junit.xml
      cobertura: cobertura.xml

import:
  stage: test
  needs: []
  parallel:
    matrix:
      - PY_VERSION: ["3.7", "3.8", "3.9", "3.10"]
  image: docker.io/library/python:$PY_VERSION
  before_script:
    - python --version
    - pip install --upgrade pip
    - pip install --progress-bar=off numpy netCDF4 matplotlib cdsapi xarray
  script:
    # Comment out the global_map import for now
    - sed -i -e '/from global_map/s/^/# /' make_daily_ACCESS_files.py
    - python -m compileall
    - python -c 'import make_daily_ACCESS_files'
    - python -c 'import add_land_fraction_to_ACCESS_output'
    - python -c 'import add_ERA5_surface_temperature_to_ACCESS_output'
